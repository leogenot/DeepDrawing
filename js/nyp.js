/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/npyjs@0.2.1/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const fetch = this.fetch ? this.fetch : require("node-fetch"); class npyjs { constructor(r) { r && console.error(["No arguments accepted to npyjs constructor.", "For usage, go to https://github.com/jhuapl-boss/npyjs."].join(" ")), this.dtypes = { "<u1": { name: "uint8", size: 8, arrayConstructor: Uint8Array }, "|u1": { name: "uint8", size: 8, arrayConstructor: Uint8Array }, "<u2": { name: "uint16", size: 16, arrayConstructor: Uint16Array }, "|i1": { name: "int8", size: 8, arrayConstructor: Int8Array }, "<i2": { name: "int16", size: 16, arrayConstructor: Int16Array }, "<u4": { name: "uint32", size: 32, arrayConstructor: Int32Array }, "<i4": { name: "int32", size: 32, arrayConstructor: Int32Array }, "<u8": { name: "uint64", size: 64, arrayConstructor: BigUint64Array }, "<i8": { name: "int64", size: 64, arrayConstructor: BigInt64Array }, "<f4": { name: "float32", size: 32, arrayConstructor: Float32Array }, "<f8": { name: "float64", size: 64, arrayConstructor: Float64Array } } } parse(r) { const e = new DataView(r.slice(8, 10)).getUint8(0), t = 10 + e; let a = new TextDecoder("utf-8").decode(new Uint8Array(r.slice(10, 10 + e))); var n = JSON.parse(a.toLowerCase().replace(/'/g, '"').replace("(", "[").replace(/,*\),*/g, "]")), o = n.shape; let s = this.dtypes[n.descr], i = new s.arrayConstructor(r, t); return { dtype: s.name, data: i, shape: o, fortranOrder: n.fortran_order } } async readFileAsync(r) { return new Promise(((e, t) => { let a = new FileReader; a.onload = () => { e(a.result) }, a.onerror = t, a.readAsArrayBuffer(r) })) } async load(r, e) { let t = this; return fetch(r).then((r => { if (r.ok) return r.blob().then((r => { var a = r; return t.readFileAsync(a).then((r => { var a = t.parse(r); return e ? e(a) : a })) })).catch((r => console.error(r))) })).catch((r => console.error(r))) } } //module.exports = npyjs;
 //# sourceMappingURL=/sm/56ebcb30dc2ebcc49bc10c157eccccb57f7f9e94af69b0415b995e98402797ea.map